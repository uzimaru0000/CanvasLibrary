{"version":3,"sources":["ts/Utils.ts","ts/Display.ts","ts/Drawable.ts","ts/Drawable/Rect.ts","ts/Drawable/Circle.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.map","sourceRoot":"../src","sourcesContent":["class Random {\n  static range(min: number, max: number, flag: boolean = false) {\n    var r = (max - min) * Math.random() + min;\n    return flag ? Math.floor(r) : r;\n  }\n  static get vector() {\n    var x = Random.range(-1, 1);\n    var y = Random.range(-1, 1);\n    return new Vector(x, y).normalized;\n  }\n}\n\nexport class Color {\n  constructor(\n    readonly red: number = 0,\n    readonly green: number = 0,\n    readonly blue: number = 0,\n    readonly alpha: number = 1\n  ) {}\n\n  toString(): string {\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n  }\n\n  static random(a: number = 1): Color {\n    return new Color(\n      Random.range(0, 255, true),\n      Random.range(0, 255, true),\n      Random.range(0, 255, true),\n      a\n    );\n  }\n}\n\nexport class Vector {\n  constructor(\n    public x: number = 0,\n    public y: number = 0,\n    public z: number = 0\n  ) {}\n\n  get length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  get normalized(): Vector {\n    const n = new Vector(this.x, this.y, this.z);\n    return this.length !== 0 ? n.div(this.length) : n;\n  }\n\n  add(v: Vector) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  }\n\n  sub(v: Vector) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  }\n  mul(s: number) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n    return this;\n  }\n  div(s: number) {\n    if (s === 0) throw new Error(\"Don't divide to zero\");\n    this.x /= s;\n    this.y /= s;\n    this.z /= s;\n    return this;\n  }\n\n  dot(v: Vector) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  cross(v: Vector) {\n    return this.x * v.y - this.y * v.x;\n  }\n\n  static get up() {\n    return new Vector(0, 1, 0);\n  }\n  static get down() {\n    return new Vector(0, -1, 0);\n  }\n  static get left() {\n    return new Vector(-1, 0, 0);\n  }\n  static get right() {\n    return new Vector(1, 0, 0);\n  }\n  static get forward() {\n    return new Vector(0, 0, 1);\n  }\n  static get back() {\n    return new Vector(0, 0, -1);\n  }\n  static get one() {\n    return new Vector(1, 1, 1);\n  }\n  static get zero() {\n    return new Vector();\n  }\n}\n\nclass Texture {\n  private image: HTMLImageElement;\n\n  constructor(path: string, w: number, h: number) {\n    this.image = new Image(w, h);\n    this.image.src = path;\n    this.image.onload = () => this.image.setAttribute(\"loaded\", \"true\");\n  }\n\n  get loaded() {\n    return this.image.getAttribute(\"loaded\");\n  }\n}\n","import { IEventTarget, Event } from \"./EventTarget\";\nimport { Color } from \"./Utils\";\nimport { Node, Drawable } from \"./Drawable\";\n\ntype Normal = { readonly type_: \"normal\" };\nconst Normal: Normal = { type_: \"normal\" };\n\ntype UseColor = { readonly type_: \"use_color\"; color: Color };\nexport const UseColor: (color: Color) => UseColor = color => ({\n  type_: \"use_color\",\n  color\n});\n\nexport type ClearMode = Normal | UseColor;\nexport type PreloadTexture = { image: HTMLImageElement };\n\nexport class Display implements IEventTarget {\n  private canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private children: (Drawable & IEventTarget)[] = [];\n  private event: { [target: string]: ((e: Event) => void)[] } = {};\n  public clearMode: ClearMode = Normal;\n\n  constructor(id: string = \"display\") {\n    this.canvas = document.getElementById(id) as HTMLCanvasElement;\n    this.context = this.canvas.getContext(\"2d\");\n\n    this.loop(Date.now());\n  }\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n\n  addEventListener(target: string, func: (e: Event) => void) {\n    if (this.event[target] === undefined) {\n      this.event[target] = [];\n    }\n    this.event[target].push(func);\n  }\n\n  removeEventListener(target: string, func: (e: Event) => void) {\n    if (this.event[target] === undefined) return;\n    this.event[target].filter(x => x !== func);\n  }\n\n  dispatchEvent(target: string, event: Event) {\n    this.children\n      .filter(x => (x as IEventTarget).dispatchEvent !== undefined)\n      .map(x => x as IEventTarget)\n      .forEach(x => x.dispatchEvent(target, event));\n    if (this.event[target] === undefined) return;\n    this.event[target].forEach(func => func(event));\n  }\n\n  public addChild(child: Drawable & IEventTarget) {\n    this.children.push(child);\n  }\n\n  public removeChild(child: Drawable & IEventTarget) {\n    this.children = this.children.filter(c => c !== child);\n  }\n\n  private draw() {\n    this.children.forEach(c => c.draw(this.context));\n  }\n\n  private loop(ms: number) {\n    this.dispatchEvent(\"update\", {\n      type: \"update\",\n      dt: (Date.now() - ms) * 1000\n    });\n    this.clear();\n    this.draw();\n    requestAnimationFrame(this.loop.bind(this, Date.now()));\n  }\n\n  private clear() {\n    switch (this.clearMode.type_) {\n      case \"normal\":\n        this.context.save();\n        this.context.fillStyle = new Color(255, 255, 255).toString();\n        break;\n      case \"use_color\":\n        this.context.save();\n        this.context.fillStyle = this.clearMode.color.toString();\n        break;\n    }\n    this.context.fillRect(0, 0, this.width, this.height);\n    this.context.restore();\n  }\n}\n","import { Vector } from \"./Utils\";\nimport { IEventTarget, Event } from \"./EventTarget\";\n\nexport interface Drawable {\n  draw(ctx: CanvasRenderingContext2D): void;\n}\n\ninterface Transform {\n  position: Vector;\n  rotate: number;\n  scale: Vector;\n}\n\ninterface Groupable<T> {\n  addChild(child: T);\n  removeChild(target: T);\n}\n\nexport type INode<T> = Transform & Groupable<T>;\n\nexport class Node implements INode<Node & Drawable>, IEventTarget {\n  public position: Vector;\n  public rotate: number = 0;\n  public scale: Vector = new Vector(1, 1);\n  protected event: { [target: string]: ((e: Event) => void)[] } = {};\n  protected children: (Node & Drawable)[] = [];\n\n  constructor() {}\n\n  public addEventListener(target: string, func: (e: Event) => void) {\n    if (this.event[target] === undefined) {\n      this.event[target] = [];\n    }\n    this.event[target].push(func);\n  }\n\n  public removeEventListener(target: string, func: (e: Event) => void) {\n    if (this.event[target] === undefined) return;\n    this.event[target] = this.event[target].filter(x => x !== func);\n  }\n\n  public dispatchEvent(target: string, event: Event) {\n    if (this.event[target] === undefined) return;\n    this.event[target].forEach(func => func(event));\n  }\n\n  public addChild(child: Node & Drawable) {\n    this.children.push(child);\n  }\n\n  public removeChild(target: Node & Drawable) {\n    this.children = this.children.filter(x => x !== target);\n  }\n\n  protected translate(ctx: CanvasRenderingContext2D) {\n    ctx.translate(this.position.x, this.position.y);\n    ctx.rotate(this.rotate);\n    ctx.scale(this.scale.x, this.scale.y);\n  }\n}\n","import { Drawable, Node } from \"../Drawable\";\nimport { Vector, Color } from \"../Utils\";\n\nexport class Rect extends Node implements Drawable {\n  constructor(\n    public position: Vector,\n    public width: number = 0,\n    public height: number = 0,\n    public color: Color = new Color()\n  ) {\n    super();\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    this.translate(ctx);\n    this.children.forEach(x => x.draw(ctx));\n    ctx.fillStyle = this.color.toString();\n    ctx.fillRect(-this.width / 2, -this.height / 2, this.width, this.height);\n    ctx.setTransform(1, 0, 1, 0, 0, 0);\n    ctx.restore();\n  }\n}\n","import { Drawable, Node } from \"../Drawable\";\nimport { Vector, Color } from \"../Utils\";\n\nexport class Circle extends Node implements Drawable {\n  constructor(\n    public position: Vector,\n    public radius: number = 0,\n    public color: Color = new Color()\n  ) {\n    super();\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    this.translate(ctx);\n    this.children.forEach(x => x.draw(ctx));\n    ctx.fillStyle = this.color.toString();\n    ctx.arc(0, 0, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.setTransform(1, 0, 1, 0, 0, 0);\n    ctx.restore();\n  }\n}\n","import { Display } from \"./ts/Display\";\nimport { Rect } from \"./ts/Drawable/Rect\";\nimport { Vector, Color } from \"./ts/Utils\";\nimport { Circle } from \"./ts/Drawable/Circle\";\n\nconst display = new Display();\nconst rect = new Rect(new Vector(100, 100), 100, 100, new Color(255, 0, 0));\nconst circle = new Circle(new Vector(200, 200), 50, new Color(0, 255, 0));\nrect.addEventListener(\"update\", ({ dt }) => {\n  rect.rotate += 10 * (180 / Math.PI / dt);\n});\ncircle.addEventListener(\"update\", ({ dt }) => {\n  circle.position = new Vector(Math.cos(dt), Math.sin(dt))\n    .mul(10)\n    .add(Vector.one.mul(200));\n});\nrect.addChild(circle);\ndisplay.addChild(rect);\n"]}